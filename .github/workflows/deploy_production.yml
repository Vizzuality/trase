env:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: trase_test
  API_HOST: localhost:3000
  TRASE_LOCAL_MIRROR_SCHEMA: trase_earth
  TRASE_LOCAL_SCHEMA: public

name: Deploy production

on: [workflow_dispatch]

jobs:
  front_end:
    name: Front end tests and build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3.1.0
        with:
          node-version: 16
      - name: Install modules
        run: yarn
      - name: Run tests
        run: yarn test
      - name: Verify build
        run: yarn build
  rspec:
    name: RSpec
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install PostgreSQL client üêò
        run: |
          sudo apt update
          sudo apt-get -yqq install libpq-dev postgresql-client

      - name: Install ruby + gems üíé
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install CodeClimate reporter
        uses: amancevice/setup-code-climate@v1
        with:
          cc_test_reporter_id: ${{ secrets.CC_TEST_REPORTER_ID }}

      - name: Setup database
        env:
          PGHOST: localhost
          PGUSER: ${{ env.POSTGRES_USER }}
          PGPASSWORD: ${{ env.POSTGRES_PASSWORD }}
          RAILS_ENV: test
        run: |
          bundle exec rails db:create RAILS_ENV=test
          bundler exec rails db:structure:load RAILS_ENV=test

      - name: Setup code coverage
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: cc-test-reporter before-build

      - name: Run tests üîß
        env:
          PGHOST: localhost
          PGUSER: ${{ env.POSTGRES_USER }}
          PGPASSWORD: ${{ env.POSTGRES_PASSWORD }}
          RAILS_ENV: test
        run: bundle exec rspec spec --fail-fast

      - name: Publish code coverage üöÄ
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: cc-test-reporter after-build
        if: ${{ github.event_name != 'pull_request' }}

  production:
    needs: [rspec, front_end]
    name: Deploy production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install ruby + gems üíé
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Deploy üöÄ
        uses: miloserdow/capistrano-deploy@master
        with:
          target: production
          deploy_key: ${{ secrets.DEPLOY_KEY_PASSWORD }}
          enc_rsa_key_val: ${{ secrets.PRODUCTION_DEPLOY_ENC_KEY }}

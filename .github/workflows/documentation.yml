env:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: trase_test
  API_HOST: localhost:3000
  TRASE_LOCAL_MIRROR_SCHEMA: trase_earth
  TRASE_LOCAL_SCHEMA: public

name: Publish documentation

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  gh_pages:
    name: DB and API docs
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4

      - name: Install PostgreSQL client üêò
        run: |
          sudo apt update
          sudo apt-get -yqq install libpq-dev postgresql-client

      - name: Install ruby + gems üíé
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup database
        env:
          PGHOST: localhost
          PGUSER: ${{ env.POSTGRES_USER }}
          PGPASSWORD: ${{ env.POSTGRES_PASSWORD }}
          RAILS_ENV: test
        run: |
          bundle exec rails db:create RAILS_ENV=test
          bundler exec rails db:structure:load RAILS_ENV=test

      - name: Build üîß
        env:
          PGHOST: localhost
          PGUSER: ${{ env.POSTGRES_USER }}
          PGPASSWORD: ${{ env.POSTGRES_PASSWORD }}
          RAILS_ENV: test
        run: bundle exec rake db:doc:html

      - name: Publish to https://vizzuality.github.io/trase/db/all_tables üöÄ
        uses: JamesIves/github-pages-deploy-action@v4.4.3
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: doc/gh-pages # The folder the action should deploy.

  surge:
    name: FE and BE docs
    runs-on: ubuntu-latest
    steps:
      - name: Publish to trase.surge.sh üöÄ
        uses: dswistowski/surge-sh-action@v1
        with:
          domain: 'trase.surge.sh'
          project: './frontend/docs/'
          login: ${{ secrets.SURGE_LOGIN }}
          token: ${{ secrets.SURGE_TOKEN }}
